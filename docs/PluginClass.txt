IUpdatable:
	- interfejs po krórym dziedziczą wszystkie klasy które przeciążają metodę Update(TimeType t) w celu aktualizcji w danym czasie.

IPlugin : IUpdatable
	- interfejs, który powinnu implementować wszystkie pluginy w modelu.
	
template< class Iface, class UIDType >			(IFace zawsze musi być typu IPlugin)
class BasePlugin : public Iface					(UIDType typ odpowiadający za nadanie statycznego UID pluginowi)
	- klasa implemetująca częściowo domyślne metody interfejsu IPlugin.
	Uwagi:
	Metody: GetTextures HasAnimatingTexture QuerySequenceAnimationSource powinny zostać zmienione bo teraz implemetują chwilowe rozwiązanie pozwalające obsługiwać resource'y w poziomu pluginu. Zostanie to poprawione w momencie zaimplementowania poprawnego Resource managera.
	
	Membery:
		m_prevPlugin - poprzedni plugin w stosunku do akualnego w Nodzie. Pole to jest niezbędne do poprawnego generowania geometrii i wielu innych rzeczy.
	
	Metody:
	wirtualne:
		SetGeometryChannel          	- Metody do obsługi pobierania i ustawiania kanałów z pluginie. Settery domyślnie assertują. Gettery próbują pobrać kanał z poprzedniego pluginu
		SetTransformChannel         
		SetPixelShaderChannel       
		SetVertexShaderChannel      
		SetGeometryShaderChannel    
		GetGeometryChannel          
		GetTransformChannel         
		GetPixelShaderChannel       
		GetVertexShaderChannel      
		GetGeometryShaderChannel
		GetTextures             		- Metoda pobierająca textury. Domyślnie zwraca pusty wektor.    
        HasAnimatingTexture         	- Metody do obsługi animacji. Do przerobienia razem z GetTextures
        QuerySequenceAnimationSource		
		Update							- Tego nie trzeba tłumaczyć. Assertuje jeśli nie zostanie przeciążony.
		
	niewirtualne:
		GetName - zwraca nazwę pluginu przekazaną przez klasę UIDType
	
Opis:
	BasePlugin jest klasą podstawową każdego pluginu. Posiada on domyślne implementacje funckji do pobierania i ustawiania kanałów w Pluginie. Każdu plugin posiada 5 kanałów odpowiadających za efakty które implemetuje.
	Są to:
	- 3 kanały opisujące shadery: geometry, vertex i pixel(fragment) shader.
	- kanał transformacji
	- kanał geometrii (nie mylić z "geometry shader channel")

Kanały shader'ów:
Kanały te nie różnią się miedzy sobą znacznie implemetacją, a tylko ich użyciem przez silnik renderujący. Ich interfejsy wyglądają podobnie. Wszyskie implemetują inteface IShaderChannel, który jest interfejsem
mającym za zadanie zwrócić źródło odpowiedniego shadera oraz listę IValue, czyli wartości parametów przekazywanych do danego shadera.
	IPixelShaderChannel:
		- interfejs kanału shadera pixela.
	IVertexShaderChannel:
		- interfejs kanału shadera wierzchołka.
	IGeometryShaderChannel:
		- interfejs kanału shadera geometrii.

Kanał geometrii:
Kanał ten to najbardziej skomplikowany kanał w pluginie. Odpowiada on za zdefiniowania komponentów w scenie.
	VertexAttributesChannel:
		- Kanał atrybutów wierzchołków.
		- Zawiera wektor connected komponentów, czyli zbiorów wierzchoków reprezentujących kształty w scenie.
		- Zawiera deskryptor opisujący typy poszczególnych danych dla wierzchołków. (np. xyz, uv0, uv1, ....)
		- Definiuje również typ prymitywu, czyli co tak naprawdę reprezentują podane wierzchołki.
		- W trakcie renderowania jest możliwość dodawania wierzchołków i aktualizacji topoligii.
		
Kanał transformacji:
	TransformChannel:
		- Kanał transformacji. Przechowuje wector klas bv::model::Transform.

		
		
		
		
Składniki kanału VertexAttributesChannel
		
ConnectedComponent
	- klasa definiująca kształt w renderowanej scenie za pomocą wierzchołków ( nie musi być to tylko położenie w przestrzeni ale na przykład dopięte do każdego z nich położenie w teksturze/teksturach ) Nazywamy je kanałami wierzchołka.
	- Każdy kanał w wierzchlku jest reprezentowany przez klasę ArributeChannel
	
ArrtibuteChannel
	- Klasa którą implementuja wszystkie typy kanałów wierzchołków takie jak Float3AttributeChannel
	- Każdy ArrtibuteChannel przechowuje wektor wartości danego atrybutu dla wszystkich wierzchołków CC. Dzięki temu pamieć poszczególnych wierzchołków lezy obok siebie w cachu.

	

	
Implementacja kanałów Shaderów.
template< class IFace, class ParameterDescriptor = EmptyParamDescriptor >
class ShaderChannel : public IFace
	- klasa implementująca bazową implementację kanału dowolnego shadera.
	- przechowuje kod shadera oraz zarejestrowane IValue. Będę one przekazane do shadera w runtime. 
	- RegisterValue( IValue * v ) funckja rejestrująca IValue w ShaderChannel.
	- GetValueList pobieranie zarejetrowanych IValue z ShaderChannel
	- Update następuje poprzez odpowiednie przeciązenie fuckcji Update w klasie pochodnej. Domyślna implemetacja jest pusta.
	- Plugin przechowuje kanały po swojej stronie lub pobiera je z poprzedniego pluginu w nodzie. Jeśli plugin przechowuje kanał to przeciążenie fukcji IPlugin::Update powinno wywoływać Update na przechowywanym kanale.
	- ParameterDescriptor klasa przechowująca identyfikatory parametrów shadera w statycznych memberach typu std::string.
	- SahderChannel w kontruktorze przyjmuje string ze ścieżką do pliku ze źródłem shareda i wczytuje go. Kompilacja następuje już po wstonie silnika po pobraniu z ShaderChannel źródeł shadera za pomocą GetShaderSource.
	
Textures:

ISequenceAnimationSource:



