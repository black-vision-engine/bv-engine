Fazy updatowania:

I. ModelScene::Update( t ) jak nazwa wskazuje tutaj jest aktualizowany stan modelu w danym czasie t
  BasicNode::Update( t ) - odpala Update( t ) na Layerach (IModelNode -> BasicNode), na dzieciach (IModelNode -> BasicNode) (rekursja)
  oraz na Pluginach przechowywanych w tym węźle (w kolejności layery, pluginy, dzieci)
    IPlugin->Update( t ) - to już jest zależne od pluginu - updatuje swój stan, np.
      - Odpala update na każdym z kanałów (nie każdy plugin ma wszystkie kanały - mogą być takie, które prawie nic nie mają)
        - VertexAttributeChannel
            - connected componenty (kanały atrybutów, np. uv, położenia lokalne //FIXME: teraz CC ma swoją metodę update, a to jest źle -> CC ma miec tylko
        - TransformChannel
            - pobiera transformParamsy i oblicza je dla czasu t i ustawia wyniki transformacjom (Values) -> do przerobienia na modl z SQT i całą resztą
        - ShaderChannel
            - vertex shader channel - domyślnie leci update z bazowej klasy (czyli pusty)
            - pixel shader channel - apdejtuje swoje Values obliczając model (czyli parameters), a potem z nadklasy - czyli nic
              values są z założenia porejestrowane w nadklasie w liście valuesów, więc w tej liście mają już zaktualizowane wartości
      
      
II. UpdatersManager::UpdateStep( t ) - pobiera listę updaterów i na każdym wykonuje update - to jest moment w którym stan modelu (obliczony poprzednio) jest zapisywany do sceny po stronie silnika
  TransformUpdater::DoUpdate( t ) - pobiera listę transformacji i oblicza local i world i przekazuje to TransformableEntity, któremu odpowiada
    UWAGA: TUTAJ NIE JEST POTRZEBNY CZAS (parametr t jest zbędny)
  GeometryUpdater - po pierwsze queruje model, a konkretnie kanał VertexAttributesChannel metodami NeedsTopologyUpdate oraz NeedsAttributesUpdate,
  (które mają być zmienione na AttributesStateChanged, TopologyStateChanged) i jesli trzeba, odpala UpdatePosition( t ) ewentualnie UpdateTopology( t )
    UWAGA: TUTAJ NIE JEST POTRZEBNY CZAS (parametr t jest zbędny)
  RenderStateUpdater - sprawdza w  model::RendererContext czy zmieniły się stany i jeśli tak, to je aktualizuje po stronie silnika (StateInstance)
    UWAGA: TUTAJ NIE JEST POTRZEBNY CZAS (parametr t jest zbędny)
  NodeUpdater  - Aktualizuje stan SceneNode na bazie IModelNodel czyli sprawdza IsVisible( t ) (które ma tylko flagę m_visible i jest
    zupełnie od t niezależne.
    UWAGA: TUTAJ NIE JEST POTRZEBNY CZAS (parametr t jest zbędny)
  SequenceAnimationUpdater - pobiera aktualną klatkę dla danej animacji i sprawdza czy trzeba ją zmienić (tutaj akurat chwilowo t jes
    potrzebne, ale pewnie jak się przemyśli te animacje, to przestanie być)
  CameraUpdater - po jaki chuj to tu jest dodane to ja nie wiem
