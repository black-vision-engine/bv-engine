Wyszyć z implementacji CC Update (i nie dziedziczyć z IUpdatable). CC z założenia tylko przechowuje stan, ale nie ma żadnej logiki - logika zmiana
stanu CC leży po stronie plugina, który odpowiednie wygenerował (albo modyfikuje).

Dodać odpowiednie helpery do operowania na CC oraz kanałach atrybutów (ustawianie UV, otoczki wypukłe, takie duperele).

Kanały też powinny być bezlogikowe, a tylko updatowane za pomocą publicznego API w pluginach. Dzięki temu nie trzeba będzie pisać tony głupich klas
dziedziczących po bazowej implementacji VertexAttributeChannel, a tylko pluginy będą za pomocą tego API odpowiednio modyfikować swoje kanały.

Zmienić GetTransformChannels na GetTransformations lub coś analogicznego.

Dodać bazową klasę Channel, która trzyma ten biedny read only, żeby nie trzeba go było propagować do każdej podklasy.

Usunąć AccessFirstParamTransform z SimpleTransformChannel (i upewnić się, że transfom channel w ogóle ma być taki, jaki jest)

Zastanowić się, dlaczego powstała klasa SimpleTransform - bo ona udaje SQT -> przepisać tę klaskę na SQT po ludzku, a nie takie coś.

Przenieść GetPrimitiveType() const z IVertexAttributesChannel do IVertexAttributesChannelDescriptor

Dopisać API helperowe do tworzenia kanałów, pluginów, akcesory do odpowiednich pół w kanałach, deskryptorach, do sprawdzania flag kanałów

Dodać API/helper do obsługi VertexAttribute klas i analogiczny akcesor do dostępu do VertexBuffer po stronie silnika (już od dawna leży jako bug do
naprawienia)

Zmienić nazwy NeedsAttributesUpdate i NeedsTopologyUpdate na AttributesStateChanged, TopologyStateChanged

RegisterValue z ShaderChannel powinno zapisywać te wartości chyba jednak w innym miejscu (nie w wektorze w klasie bazowej ShaderChannel tylko jakoś
bardziej globalnie - na przykład w pluginie - to jest dobry moment, żeby przemyśleć, gdzie te wartości powinny być trzymane. Lokalnie są potrzebne
do updatowania stanu shaderów po stronie silnika

Pojedyncze CC powinny mieć w sobie flagę, że zmienił się stan, żeby tylko przepisywać VB tych CC, które uległy zmianie (NeedsAttributesUpdate).

Trzeba zagwarantować (w obecnej implementacji), że jest tylko jeden shader channel, który dostarcza kod shadera - wcześniejsze kanały shadera mogą dostarczać 
co najwyżej parametry (chociaż pewnie też nie powinny)

Zamienić TransformChannel::GetTransformChannels na TransformChannel::GetTransformList lub GetTransformations (bo o to chodzi, tu już nie ma zabawy w kanały)

GeometryUpdater przemianować na VertexAttributesUpdater (o ile cała ta maszyneria się jeszcze bardziej nie uprości)

UpdatePosition( t ) i UpdateTopology( t ) w GeometryUpdater należy przerobić tak, żeby korzystały z helperów, które służą do budowania
VertexBuffora oraz odpowiedniego układania danych w kanałach. Trzeba to koniecznie zrobić, bo się coraz bardziej panoszy śmieciowy
kod, którego nawet nie da się przeczytać ze zrozumieniem. Jest tam też taka zaślepka WriteVertexDataToVBO, która już powinna leżeć w
helperach do tworzenia i modyfikowania veretex buffer obiektów.

RenderableArrayDataArraysSingleVertexBuffer wypadałoby przemianować na coś o mniejszej liczbie znaków.

Wyszyć parametr t z UpdatersManagera (a już na pewno z tych kanałów, które nie potrzebują tego parametru do poprawnej ewaluacji)

Przeprojektować i zrefaktorować AttributeChannel, VertexAttributesChannel, ConnectedComponent (wszystkie te implementacje).
W szczególności GetPositionChannel i GetUVChannel to słabe nieco w implementacji AttributeChannel - to powinno być jakieś ogólne, a nie
takie otypowane querowanie zaimplementowane jawnie w AttributeChannel. W ogóle należy to pozmieniać i przerobić, bo na przykład
poszczególne kanały z atrybutami, powinny się nazywać data czy jakoś tak, a nie tak, jak kanały pluginu.